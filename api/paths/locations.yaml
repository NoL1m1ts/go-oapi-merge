locations:
  get:
    summary: Get all locations
    description: Get all locations
    operationId: GetLocations
    tags:
      - locations
    responses:
      '200':
        description: List of locations
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Location'
  post:
    summary: Create a new location
    description: Create a new location
    operationId: CreateLocation
    tags:
      - locations
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LocationCreate'
    responses:
      '201':
        description: Location created successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
      '401':
        $ref: '../components/responses.yaml#/components/responses/401'
      '403':
        $ref: '../components/responses.yaml#/components/responses/403'
locations-search:
  get:
    summary: Search locations
    description: Search locations
    operationId: SearchLocations
    tags:
      - locations
    parameters:
      - title: search
        in: query
        required: true
        schema:
          type: string
    responses:
      '200':
        description: List of locations
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Location'
location-by-id:
  get:
    summary: Get location by id
    description: Get location by id
    operationId: GetLocationById
    tags:
      - locations
    parameters:
      - title: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - title: with-masters
        in: query
        required: false
        schema:
          type: boolean
    responses:
      '200':
        description: Location details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
      '404':
        $ref: '../components/responses.yaml#/components/responses/404'
  patch:
    summary: Update location
    description: Update location details
    operationId: UpdateLocation
    tags:
      - locations
    parameters:
      - title: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LocationUpdate'
    responses:
      '200':
        description: Location updated successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
      '401':
        $ref: '../components/responses.yaml#/components/responses/401'
      '403':
        $ref: '../components/responses.yaml#/components/responses/403'
      '404':
        $ref: '../components/responses.yaml#/components/responses/404'
  delete:
    summary: Delete location
    description: Delete location
    operationId: DeleteLocation
    tags:
      - locations
    parameters:
      - title: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    responses:
      '204':
        description: Location deleted successfully
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
      '401':
        $ref: '../components/responses.yaml#/components/responses/401'
      '403':
        $ref: '../components/responses.yaml#/components/responses/403'
      '404':
        $ref: '../components/responses.yaml#/components/responses/404'
location-by-id-add-master:
  post:
    summary: Add master to location
    description: Add master to location
    operationId: AddMasterToLocation
    tags:
      - locations
    parameters:
      - title: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - title: master_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    responses:
      '200':
        description: Master added to location successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
      '401':
        $ref: '../components/responses.yaml#/components/responses/401'
      '403':
        $ref: '../components/responses.yaml#/components/responses/403'
      '404':
        $ref: '../components/responses.yaml#/components/responses/404'
location-by-id-remove-master:
  delete:
    summary: Remove master from location
    description: Remove master from location
    operationId: RemoveMasterFromLocation
    tags:
      - locations
    parameters:
      - title: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - title: master_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    responses:
      '200':
        description: Master removed from location successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
      '401':
        $ref: '../components/responses.yaml#/components/responses/401'
      '403':
        $ref: '../components/responses.yaml#/components/responses/403'
      '404':
        $ref: '../components/responses.yaml#/components/responses/404'

components:
  schemas:
    Location:
      type: object
      properties:
        id:
          type: integer
          format: int64
        owner:
          $ref: './users.yaml#/components/schemas/User'
        city:
          $ref: './geo.yaml#/components/schemas/City'
        title:
          type: string
        address:
          type: string
        coordinates:
          type: object
          properties:
            latitude:
              type: number
              format: float
            longitude:
              type: number
              format: float
        howToGet:
          type: string
        description:
          type: string
        hideOwner:
          type: boolean
        isActive:
          type: boolean
      required:
        - id
        - title
        - address
        - city
        - coordinates
    LocationCreate:
      type: object
      properties:
        ownerId:
          type: integer
          format: int64
        cityId:
          type: integer
          format: int64
        title:
          type: string
        address:
          type: string
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
        howToGet:
          type: string
        description:
          type: string
        hideOwner:
          type: boolean
        isActive:
          type: boolean
      required:
        - ownerId
        - cityId
        - title
        - address
        - latitude
        - longitude
        - hideOwner
        - isActive
    LocationUpdate:
      type: object
      properties:
        ownerId:
          type: integer
          format: int64
        title:
          type: string
        address:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        howToGet:
          type: string
        description:
          type: string
        hideOwner:
          type: boolean
        isActive:
          type: boolean
