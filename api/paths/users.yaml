users:
  get:
    summary: Get all users
    description: Get all users
    operationId: GetUsers
    tags:
      - users
    parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
    responses:
      '200':
        description: List of users
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserShort'
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
      '401':
        $ref: '../components/responses.yaml#/components/responses/401'
      '403':
        $ref: '../components/responses.yaml#/components/responses/403'
  post:
    summary: Create a new user
    description: Create a new user
    operationId: CreateUser
    tags:
      - users
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserCreate'
    responses:
      '201':
        description: User created successfully
        headers:
          Location:
            description: URL of the created user
            schema:
              type: string
              format: uri
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
users-by-id:
  get:
    summary: Get user by id
    description: Get user by id
    operationId: GetUserById
    tags:
      - users
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    responses:
      '200':
        description: User details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
      '401':
        $ref: '../components/responses.yaml#/components/responses/401'
      '403':
        $ref: '../components/responses.yaml#/components/responses/403'
      '404':
        $ref: '../components/responses.yaml#/components/responses/404'
users-me:
  get:
    summary: Get current user
    description: Get current user
    operationId: GetProfile
    tags:
      - users
    responses:
      '200':
        description: User details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFull'
      '401':
        $ref: '../components/responses.yaml#/components/responses/401'
      '403':
        $ref: '../components/responses.yaml#/components/responses/403'
  patch:
    summary: Update current user
    description: Update current user
    operationId: UpdateProfile
    tags:
      - users
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserUpdate'
    responses:
      '204':
        description: User details updated successfully
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
      '401':
        $ref: '../components/responses.yaml#/components/responses/401'
      '403':
        $ref: '../components/responses.yaml#/components/responses/403'
      '404':
        $ref: '../components/responses.yaml#/components/responses/404'
  delete:
    summary: Delete current user
    description: Delete current user
    operationId: DeleteProfile
    tags:
      - users
    responses:
      '204':
        description: User deleted successfully
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
      '401':
        $ref: '../components/responses.yaml#/components/responses/401'
      '403':
        $ref: '../components/responses.yaml#/components/responses/403'
      '404':
        $ref: '../components/responses.yaml#/components/responses/404'
users-me-config:
  get:
    summary: Get user configuration
    description: Get user configuration settings
    operationId: GetProfileConfig
    tags:
      - users
    responses:
      '200':
        description: User configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfig'
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
      '401':
        $ref: '../components/responses.yaml#/components/responses/401'
      '403':
        $ref: '../components/responses.yaml#/components/responses/403'
      '404':
        $ref: '../components/responses.yaml#/components/responses/404'
  patch:
    summary: Update user configuration
    description: Update user configuration settings
    operationId: UpdateProfileConfig
    tags:
      - users
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserConfigUpdate'
    responses:
      '204':
        description: Configuration updated successfully
      '400':
        $ref: '../components/responses.yaml#/components/responses/400'
      '401':
        $ref: '../components/responses.yaml#/components/responses/401'
      '403':
        $ref: '../components/responses.yaml#/components/responses/403'
      '404':
        $ref: '../components/responses.yaml#/components/responses/404'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        city:
          $ref: './geo.yaml#/components/schemas/City'
        rating:
          type: number
          format: float
          minimum: 0
          maximum: 5
        ratingCount:
          type: integer
        birthDate:
          type: string
          example: 'DD-MM'
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
        languages:
          type: array
          items:
            $ref: './geo.yaml#/components/schemas/Language'
      required:
        - id
        - firstName
        - rating
        - ratingCount
    UserFull:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        email:
          type: string
        phone:
          type: string
        whatsapp:
          type: string
        telegram:
          type: string
        isMaster:
          type: boolean
          default: false
        city:
          $ref: './geo.yaml#/components/schemas/City'
        country:
          $ref: './geo.yaml#/components/schemas/Country'
        rating:
          type: number
          format: float
          minimum: 0
          maximum: 5
        ratingCount:
          type: integer
        birthDate:
          type: string
          example: 'DD-MM'
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
        languages:
          type: array
          items:
            $ref: './geo.yaml#/components/schemas/Language'
      required:
        - id
        - firstName
        - rating
        - ratingCount
    UserShort:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        city:
          $ref: './geo.yaml#/components/schemas/City'
        avatar:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
        language:
          $ref: './geo.yaml#/components/schemas/Language'
        rating:
          type: number
          format: float
        ratingCount:
          type: integer
      required:
        - id
        - firstName
        - rating
        - ratingCount
    UserCreate:
      type: object
      properties:
        firstName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required,alpha
        middleName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty,alpha
        lastName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty,alpha
        phone:
          type: string
          maxLength: 20
          x-oapi-codegen-extra-tags:
            validate: required,e164
      required:
        - firstName
        - phone

    UserUpdate:
      type: object
      properties:
        firstName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty,alpha
        middleName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty,alpha
        lastName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty,alpha
        avatar:
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty
        email:
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty,email
        phone:
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty,e164
        whatsapp:
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty,e164
        telegram:
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty,alphanum,startswith=@
        cityId:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags:
            validate: omitempty,number
        countryId:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags:
            validate: omitempty,number
        birthDate:
          type: string
          example: 'DD-MM'
          x-oapi-codegen-extra-tags:
            validate: omitempty,ddmm
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
          x-oapi-codegen-extra-tags:
            validate: omitempty,oneof=MALE FEMALE OTHER
        languageIds:
          type: array
          items:
            type: integer
            format: int
          x-oapi-codegen-extra-tags:
            validate: omitempty,dive,number
    UserConfig:
      type: object
      properties:
        notifications:
          type: object
          properties:
            email:
              type: boolean
            push:
              type: boolean
        notificationBefore1h:
          type: boolean
        notificationBefore3h:
          type: boolean
        notificationBefore24h:
          type: boolean
        appLanguage:
          type: string
        timezone:
          type: string
      required:
        - notifications
        - notificationBefore1h
        - notificationBefore3h
        - notificationBefore24h
        - appLanguage
        - timezone
    UserConfigUpdate:
      type: object
      properties:
        notifications:
          type: object
          properties:
            email:
              type: boolean
              x-oapi-codegen-extra-tags:
                validate: omitempty,boolean
            push:
              type: boolean
              x-oapi-codegen-extra-tags:
                validate: omitempty,boolean
        notificationBefore1h:
          type: boolean
          x-oapi-codegen-extra-tags:
            validate: omitempty,boolean
        notificationBefore3h:
          type: boolean
          x-oapi-codegen-extra-tags:
            validate: omitempty,boolean
        notificationBefore24h:
          type: boolean
          x-oapi-codegen-extra-tags:
            validate: omitempty,boolean
        appLanguage:
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty,alpha
        timezone:
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty,timezone
